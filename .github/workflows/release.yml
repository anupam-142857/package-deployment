name: release-workflow

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Release Type'
        default: 'patch'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  get_next_version:
    runs-on: ubuntu-latest
    # needs: start_release
    
    steps:
      - name: checkout-repo-content
        uses: actions/checkout@v2
      - name: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: execute script
        id: execute-script
        run: |
          output=$(python3 release_utils.py --release_type ${{ github.event.inputs.name }})
          echo $output
          new_version=$(echo $output | awk -F, '{print $1}' | sed s/\'//g | sed s/\(// )
          new_tag=$(echo $output | awk -F, '{print $2}' | sed s/\ // | sed s/\'//g | sed s/\)// )
          echo "new version is $new_version"
          echo "new tag is $new_tag"
          echo ::set-output name=version::$new_version
          echo ::set-output name=tag::$new_tag
    
    outputs:
      new_version: ${{ steps.execute-script.outputs.version }}
      new_tag: ${{ steps.execute-script.outputs.tag }}

  # update the version file
  update_version_and_push_tag:
    runs-on: ubuntu-latest
    needs: get_next_version
    steps:
      - name: checkout-repo-content
        uses: actions/checkout@v2
      - name: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: bump version
        id: bump-version
        run : |
          echo "current folder = $PWD"
          echo "current branch = $(git branch --show-current)"
          output=$(python3 release_utils.py --release_type ${{ github.event.inputs.name }} --bump_version)
          cat version.json
      
      - name: add and commit to main
        uses: EndBug/add-and-commit@v7.5.0
        with:
          author_name: Anupam Bhatnagar
          author_email: anupam.nyc@gmail.com

          # The name of the branch to use, if different from the one that triggered the workflow.
          # Default: the branch that triggered the run
          branch: main
          default_author: github_actor
          message: '${{ needs.get_next_version.outputs.new_version }} release'
          pathspec_error_handling: exitAtEnd

          # Arguments for the git pull command. Use NO-PULL to avoid the action pulling at all.
          # Default: '--no-rebase'
          pull: 'NO-PULL'
          tag: '${{ needs.get_next_version.outputs.new_tag }}'
      
      # build the PyPI package and upload it
      - name: install dependencies, build and upload
        env:
          TWINE_USERNAME: anupambhatnagar
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python3 -m pip install --upgrade pip
          pip install setuptools wheel twine
          python3 setup.py sdist
          python3 -m twine upload --repository pypi dist/*
  
  # create the release
  create_release:
    runs-on: ubuntu-latest
    needs: update_version_and_push_tag
    steps:
      - uses: actions/checkout@v2
      - uses: ncipollo/release-action@v1
        with:
          tag: 'v0.5.8'
          # tag: ${{ needs.get_next_version.outputs.new_tag }}
      # - name: Checkout
      #   uses: actions/checkout@v2
      # - name: GH Release
      #   uses: softprops/action-gh-release@v0.1.14
#         with:
#           tag_name: ${{ needs.get_next_version.outputs.new_tag }}
#           files: "./dist/*.tar.gz"
