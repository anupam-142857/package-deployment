name: release-workflow

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Release Type'
        default: 'patch'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  start_release:
    runs-on: ubuntu-latest
    steps:
    - name: get-release-type
      run: echo "Release type = ${{ github.event.inputs.name }}"
  
  get_next_version:
    runs-on: ubuntu-latest
    needs: start_release
    
    steps:
      - name: checkout-repo-content
        uses: actions/checkout@v2
      - name: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: execute script
        id: execute-script
        run: |
          output=$(python3 release_utils.py --release_type ${{ github.event.inputs.name }})
          echo $output
          new_version=echo $output | awk '{print $1}'
          new_branch=echo $output | awk '{print $2}'
          new_tag=echo $output | awk '{print $3}'
          echo ::set-output name=version::$new_version
          echo ::set-output name=branch::$new_branch
          echo ::set-output name=tag::$new_tag
    
    outputs:
      new_version: ${{ steps.execute-script.outputs.version }}
      new_branch: ${{ steps.execute-script.outputs.branch }}
      new_tag: ${{ steps.execute-script.outputs.tag }}
    

  # print_next_version_job:
  #   runs-on: ubuntu-latest
  #   needs: get_next_version
  #   steps:
  #     - name: lets echo
  #       # env:
  #       #   previous_output: ${{ needs.get_next_version.outputs.next_version}}
  #       # run: echo $previous_output
  #       run: echo ${{ needs.get_next_version.outputs.next_version}}


  # checkout a new branch release-x.y.z
  # checkout_branch:
  #   runs-on: ubuntu-latest
  #   needs: get_next_version
  #   steps:
  #     - name: checkout-new-release-branch
  #       uses: peterjgrainger/action-create-branch@v2.0.1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.SUPER_SECRET }}    
  #       # with:
        #   branch: release-v${{ needs.get_current_version.outputs.next_version }}
  
    # update the version file
  update_version:
    runs-on: ubuntu-latest
    needs: get_next_version
    steps:
      - name: checkout-repo-content
        uses: actions/checkout@v2
      - name: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: bump version
        id: bump-version
        run : |
          echo $PWD
        
          git checkout -b ${{ needs.get_current_version.outputs.new_branch }}
          echo $(git branch --show-current)
          out=$(python3 release_utils.py --release_type ${{ github.event.inputs.name }} --bump_version)
          echo $out
          cat version.json

          git add version.json
          git commit -m 'bumping the version'
          git push -u origin ${{ needs.get_current_version.outputs.next_branch }}
